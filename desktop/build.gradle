plugins {
    id "java-library"
}

sourceCompatibility = 18
sourceSets.main.java.srcDirs = [ "src/" ]
sourceSets.main.resources.srcDirs = ["../assets"]

project.ext.mainClassName = "org.delusion.elgame.desktop.DesktopLauncher"
project.ext.assetsDir = new File("../assets")

task run(dependsOn: classes, type: JavaExec) {
    dependsOn ':desktop:texturePacker'
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    ignoreExitValue = true as JavaExecSpec
}

task debug(dependsOn: classes, type: JavaExec) {
    dependsOn ':desktop:texturePacker'
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    ignoreExitValue = true as JavaExecSpec
    debug = true
}

task dist(type: Jar) {
    dependsOn ':desktop:texturePacker'
    manifest {
        attributes 'Main-Class': project.mainClassName
    }
    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}


dist.dependsOn classes 

eclipse.project.name = appName + "-desktop"

configurations {
    toolsjar
}

dependencies {
    implementation project(":core")
    api "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
    api "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
    api "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-desktop"
    api "com.badlogicgames.gdx-controllers:gdx-controllers-desktop:$gdxControllersVersion"
    toolsjar "com.badlogicgames.gdx:gdx-tools:$gdxVersion"
    api "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-desktop"
    api "com.badlogicgames.gdx:gdx-bullet-platform:$gdxVersion:natives-desktop"
    api "de.tomgrill.gdxdialogs:gdx-dialogs-desktop:$dialogsVersion"
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'com.google.code.gson:gson:2.9.0'
    api configurations.toolsjar.dependencies
}

task texturePacker(type: Exec) {
    workingDir "../"
    commandLine "cmd.exe", "/c", "python", "packTextures.py", "${configurations.toolsjar.asPath}"
}
